# Builder for CodePush CLI
FROM public.ecr.aws/docker/library/node:22-alpine3.21 AS cli-builder

WORKDIR /usr/src/cli

# Copy dependency definitions
COPY cli/package.json cli/package-lock.json ./

# Install dependencies
RUN npm ci

# Copy the source code
COPY cli/ .

# Build the application
RUN npm run build


# Production image
FROM public.ecr.aws/docker/library/node:22-alpine3.21

ENV NODE_ENV=production

WORKDIR /usr/src/cli

# Install tini
RUN apk add --no-cache tini
RUN apk add --no-cache bash

# Copy built CodePush API from builder stage
# COPY --from=api-builder /usr/src/app /usr/src/app

# Copy built CodePush CLI from builder stage
COPY --from=cli-builder /usr/src/cli /usr/src/cli
RUN npm install -g .

# Copy built Azurite from builder stage
# WORKDIR /opt/azurite
# COPY --from=azurite-builder /opt/azurite /opt/azurite

# Default Workspace Volume for Azurite
VOLUME [ "/data" ]

# Expose ports for CodePush API and Azurite
# EXPOSE 3000
# EXPOSE 10000
# EXPOSE 10001
# EXPOSE 10002

# # Install supervisord
# RUN apk add --no-cache supervisor

# # Copy the supervisord configuration file into the container
# COPY supervisord.conf /etc/supervisord.conf

# # Main process
# CMD ["supervisord", "-c", "/etc/supervisord.conf"]